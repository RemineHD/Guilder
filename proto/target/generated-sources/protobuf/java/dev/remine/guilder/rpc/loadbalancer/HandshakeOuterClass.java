// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: loadbalancer/handshake.proto

package dev.remine.guilder.rpc.loadbalancer;

public final class HandshakeOuterClass {
  private HandshakeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ClientServiceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Loadbalancer.ClientService)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string Ip = 1;</code>
     */
    java.lang.String getIp();
    /**
     * <code>string Ip = 1;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>int32 Port = 2;</code>
     */
    int getPort();
  }
  /**
   * <pre>
   *This message provides the information the client may need to connect to a needed service.
   *For example: it will provide a service Type PLAYERS with the IP 127.0.0.1 and the Port 50014,
   *so when a Spigot server tries to retrieve information of a player it will be able to make a connection to that
   *service.
   * </pre>
   *
   * Protobuf type {@code Loadbalancer.ClientService}
   */
  public  static final class ClientService extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Loadbalancer.ClientService)
      ClientServiceOrBuilder {
    // Use ClientService.newBuilder() to construct.
    private ClientService(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClientService() {
      ip_ = "";
      port_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ClientService(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              ip_ = s;
              break;
            }
            case 16: {

              port_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientService_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientService_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.class, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder.class);
    }

    /**
     * Protobuf enum {@code Loadbalancer.ClientService.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PLAYERS = 0;</code>
       */
      PLAYERS(0),
      /**
       * <code>SERVERS = 1;</code>
       */
      SERVERS(1),
      /**
       * <code>WORLDS = 2;</code>
       */
      WORLDS(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PLAYERS = 0;</code>
       */
      public static final int PLAYERS_VALUE = 0;
      /**
       * <code>SERVERS = 1;</code>
       */
      public static final int SERVERS_VALUE = 1;
      /**
       * <code>WORLDS = 2;</code>
       */
      public static final int WORLDS_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return PLAYERS;
          case 1: return SERVERS;
          case 2: return WORLDS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Loadbalancer.ClientService.Type)
    }

    public static final int IP_FIELD_NUMBER = 1;
    private volatile java.lang.Object ip_;
    /**
     * <code>string Ip = 1;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ip_ = s;
        return s;
      }
    }
    /**
     * <code>string Ip = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <code>int32 Port = 2;</code>
     */
    public int getPort() {
      return port_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ip_);
      }
      if (port_ != 0) {
        output.writeInt32(2, port_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, ip_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, port_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService)) {
        return super.equals(obj);
      }
      dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService other = (dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService) obj;

      boolean result = true;
      result = result && getIp()
          .equals(other.getIp());
      result = result && (getPort()
          == other.getPort());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IP_FIELD_NUMBER;
      hash = (53 * hash) + getIp().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *This message provides the information the client may need to connect to a needed service.
     *For example: it will provide a service Type PLAYERS with the IP 127.0.0.1 and the Port 50014,
     *so when a Spigot server tries to retrieve information of a player it will be able to make a connection to that
     *service.
     * </pre>
     *
     * Protobuf type {@code Loadbalancer.ClientService}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Loadbalancer.ClientService)
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientService_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientService_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.class, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder.class);
      }

      // Construct using dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        ip_ = "";

        port_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientService_descriptor;
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService getDefaultInstanceForType() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.getDefaultInstance();
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService build() {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService buildPartial() {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService result = new dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService(this);
        result.ip_ = ip_;
        result.port_ = port_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService) {
          return mergeFrom((dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService other) {
        if (other == dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.getDefaultInstance()) return this;
        if (!other.getIp().isEmpty()) {
          ip_ = other.ip_;
          onChanged();
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <code>string Ip = 1;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string Ip = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string Ip = 1;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string Ip = 1;</code>
       */
      public Builder clearIp() {
        
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>string Ip = 1;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ip_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <code>int32 Port = 2;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>int32 Port = 2;</code>
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 Port = 2;</code>
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Loadbalancer.ClientService)
    }

    // @@protoc_insertion_point(class_scope:Loadbalancer.ClientService)
    private static final dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService();
    }

    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClientService>
        PARSER = new com.google.protobuf.AbstractParser<ClientService>() {
      public ClientService parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ClientService(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClientService> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClientService> getParserForType() {
      return PARSER;
    }

    public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HandshakeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Loadbalancer.HandshakeRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *The handshakeToken is a temporal one use token generated by the servers microservice.
     *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
     *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
     * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
     * </pre>
     *
     * <code>string handshakeToken = 1;</code>
     */
    java.lang.String getHandshakeToken();
    /**
     * <pre>
     *The handshakeToken is a temporal one use token generated by the servers microservice.
     *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
     *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
     * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
     * </pre>
     *
     * <code>string handshakeToken = 1;</code>
     */
    com.google.protobuf.ByteString
        getHandshakeTokenBytes();
  }
  /**
   * Protobuf type {@code Loadbalancer.HandshakeRequest}
   */
  public  static final class HandshakeRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Loadbalancer.HandshakeRequest)
      HandshakeRequestOrBuilder {
    // Use HandshakeRequest.newBuilder() to construct.
    private HandshakeRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HandshakeRequest() {
      handshakeToken_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HandshakeRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              handshakeToken_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_HandshakeRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_HandshakeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest.class, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest.Builder.class);
    }

    public static final int HANDSHAKETOKEN_FIELD_NUMBER = 1;
    private volatile java.lang.Object handshakeToken_;
    /**
     * <pre>
     *The handshakeToken is a temporal one use token generated by the servers microservice.
     *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
     *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
     * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
     * </pre>
     *
     * <code>string handshakeToken = 1;</code>
     */
    public java.lang.String getHandshakeToken() {
      java.lang.Object ref = handshakeToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        handshakeToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *The handshakeToken is a temporal one use token generated by the servers microservice.
     *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
     *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
     * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
     * </pre>
     *
     * <code>string handshakeToken = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHandshakeTokenBytes() {
      java.lang.Object ref = handshakeToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        handshakeToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getHandshakeTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, handshakeToken_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getHandshakeTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, handshakeToken_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest)) {
        return super.equals(obj);
      }
      dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest other = (dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest) obj;

      boolean result = true;
      result = result && getHandshakeToken()
          .equals(other.getHandshakeToken());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HANDSHAKETOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getHandshakeToken().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Loadbalancer.HandshakeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Loadbalancer.HandshakeRequest)
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_HandshakeRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_HandshakeRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest.class, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest.Builder.class);
      }

      // Construct using dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        handshakeToken_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_HandshakeRequest_descriptor;
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest getDefaultInstanceForType() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest.getDefaultInstance();
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest build() {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest buildPartial() {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest result = new dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest(this);
        result.handshakeToken_ = handshakeToken_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest) {
          return mergeFrom((dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest other) {
        if (other == dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest.getDefaultInstance()) return this;
        if (!other.getHandshakeToken().isEmpty()) {
          handshakeToken_ = other.handshakeToken_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object handshakeToken_ = "";
      /**
       * <pre>
       *The handshakeToken is a temporal one use token generated by the servers microservice.
       *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
       *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
       * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
       * </pre>
       *
       * <code>string handshakeToken = 1;</code>
       */
      public java.lang.String getHandshakeToken() {
        java.lang.Object ref = handshakeToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          handshakeToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *The handshakeToken is a temporal one use token generated by the servers microservice.
       *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
       *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
       * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
       * </pre>
       *
       * <code>string handshakeToken = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHandshakeTokenBytes() {
        java.lang.Object ref = handshakeToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          handshakeToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *The handshakeToken is a temporal one use token generated by the servers microservice.
       *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
       *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
       * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
       * </pre>
       *
       * <code>string handshakeToken = 1;</code>
       */
      public Builder setHandshakeToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        handshakeToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The handshakeToken is a temporal one use token generated by the servers microservice.
       *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
       *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
       * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
       * </pre>
       *
       * <code>string handshakeToken = 1;</code>
       */
      public Builder clearHandshakeToken() {
        
        handshakeToken_ = getDefaultInstance().getHandshakeToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The handshakeToken is a temporal one use token generated by the servers microservice.
       *the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
       *so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
       * the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
       * </pre>
       *
       * <code>string handshakeToken = 1;</code>
       */
      public Builder setHandshakeTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        handshakeToken_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Loadbalancer.HandshakeRequest)
    }

    // @@protoc_insertion_point(class_scope:Loadbalancer.HandshakeRequest)
    private static final dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest();
    }

    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HandshakeRequest>
        PARSER = new com.google.protobuf.AbstractParser<HandshakeRequest>() {
      public HandshakeRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HandshakeRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HandshakeRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HandshakeRequest> getParserForType() {
      return PARSER;
    }

    public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.HandshakeRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClientHandshakeReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Loadbalancer.ClientHandshakeReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *Client Id, it may be useful for Debug/Development tasks
     * </pre>
     *
     * <code>string Id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *Client Id, it may be useful for Debug/Development tasks
     * </pre>
     *
     * <code>string Id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *The final AuthKey provided by JWT
     * </pre>
     *
     * <code>string authKey = 2;</code>
     */
    java.lang.String getAuthKey();
    /**
     * <pre>
     *The final AuthKey provided by JWT
     * </pre>
     *
     * <code>string authKey = 2;</code>
     */
    com.google.protobuf.ByteString
        getAuthKeyBytes();

    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    java.util.List<dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService> 
        getServicesList();
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService getServices(int index);
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    int getServicesCount();
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    java.util.List<? extends dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder> 
        getServicesOrBuilderList();
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder getServicesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Loadbalancer.ClientHandshakeReply}
   */
  public  static final class ClientHandshakeReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Loadbalancer.ClientHandshakeReply)
      ClientHandshakeReplyOrBuilder {
    // Use ClientHandshakeReply.newBuilder() to construct.
    private ClientHandshakeReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClientHandshakeReply() {
      id_ = "";
      authKey_ = "";
      services_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ClientHandshakeReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              authKey_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                services_ = new java.util.ArrayList<dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService>();
                mutable_bitField0_ |= 0x00000004;
              }
              services_.add(
                  input.readMessage(dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          services_ = java.util.Collections.unmodifiableList(services_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientHandshakeReply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientHandshakeReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply.class, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *Client Id, it may be useful for Debug/Development tasks
     * </pre>
     *
     * <code>string Id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Client Id, it may be useful for Debug/Development tasks
     * </pre>
     *
     * <code>string Id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUTHKEY_FIELD_NUMBER = 2;
    private volatile java.lang.Object authKey_;
    /**
     * <pre>
     *The final AuthKey provided by JWT
     * </pre>
     *
     * <code>string authKey = 2;</code>
     */
    public java.lang.String getAuthKey() {
      java.lang.Object ref = authKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *The final AuthKey provided by JWT
     * </pre>
     *
     * <code>string authKey = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAuthKeyBytes() {
      java.lang.Object ref = authKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICES_FIELD_NUMBER = 3;
    private java.util.List<dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService> services_;
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    public java.util.List<dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService> getServicesList() {
      return services_;
    }
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    public java.util.List<? extends dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder> 
        getServicesOrBuilderList() {
      return services_;
    }
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    public int getServicesCount() {
      return services_.size();
    }
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService getServices(int index) {
      return services_.get(index);
    }
    /**
     * <pre>
     *A list of the services needed by the client for setup.
     * </pre>
     *
     * <code>repeated .Loadbalancer.ClientService services = 3;</code>
     */
    public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder getServicesOrBuilder(
        int index) {
      return services_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getAuthKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, authKey_);
      }
      for (int i = 0; i < services_.size(); i++) {
        output.writeMessage(3, services_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getAuthKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, authKey_);
      }
      for (int i = 0; i < services_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, services_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply)) {
        return super.equals(obj);
      }
      dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply other = (dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getAuthKey()
          .equals(other.getAuthKey());
      result = result && getServicesList()
          .equals(other.getServicesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + AUTHKEY_FIELD_NUMBER;
      hash = (53 * hash) + getAuthKey().hashCode();
      if (getServicesCount() > 0) {
        hash = (37 * hash) + SERVICES_FIELD_NUMBER;
        hash = (53 * hash) + getServicesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Loadbalancer.ClientHandshakeReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Loadbalancer.ClientHandshakeReply)
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientHandshakeReply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientHandshakeReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply.class, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply.Builder.class);
      }

      // Construct using dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getServicesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        authKey_ = "";

        if (servicesBuilder_ == null) {
          services_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          servicesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.internal_static_Loadbalancer_ClientHandshakeReply_descriptor;
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply getDefaultInstanceForType() {
        return dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply.getDefaultInstance();
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply build() {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply buildPartial() {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply result = new dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.authKey_ = authKey_;
        if (servicesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            services_ = java.util.Collections.unmodifiableList(services_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.services_ = services_;
        } else {
          result.services_ = servicesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply) {
          return mergeFrom((dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply other) {
        if (other == dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getAuthKey().isEmpty()) {
          authKey_ = other.authKey_;
          onChanged();
        }
        if (servicesBuilder_ == null) {
          if (!other.services_.isEmpty()) {
            if (services_.isEmpty()) {
              services_ = other.services_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureServicesIsMutable();
              services_.addAll(other.services_);
            }
            onChanged();
          }
        } else {
          if (!other.services_.isEmpty()) {
            if (servicesBuilder_.isEmpty()) {
              servicesBuilder_.dispose();
              servicesBuilder_ = null;
              services_ = other.services_;
              bitField0_ = (bitField0_ & ~0x00000004);
              servicesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getServicesFieldBuilder() : null;
            } else {
              servicesBuilder_.addAllMessages(other.services_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *Client Id, it may be useful for Debug/Development tasks
       * </pre>
       *
       * <code>string Id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Client Id, it may be useful for Debug/Development tasks
       * </pre>
       *
       * <code>string Id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Client Id, it may be useful for Debug/Development tasks
       * </pre>
       *
       * <code>string Id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Client Id, it may be useful for Debug/Development tasks
       * </pre>
       *
       * <code>string Id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Client Id, it may be useful for Debug/Development tasks
       * </pre>
       *
       * <code>string Id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object authKey_ = "";
      /**
       * <pre>
       *The final AuthKey provided by JWT
       * </pre>
       *
       * <code>string authKey = 2;</code>
       */
      public java.lang.String getAuthKey() {
        java.lang.Object ref = authKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *The final AuthKey provided by JWT
       * </pre>
       *
       * <code>string authKey = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAuthKeyBytes() {
        java.lang.Object ref = authKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *The final AuthKey provided by JWT
       * </pre>
       *
       * <code>string authKey = 2;</code>
       */
      public Builder setAuthKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        authKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The final AuthKey provided by JWT
       * </pre>
       *
       * <code>string authKey = 2;</code>
       */
      public Builder clearAuthKey() {
        
        authKey_ = getDefaultInstance().getAuthKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The final AuthKey provided by JWT
       * </pre>
       *
       * <code>string authKey = 2;</code>
       */
      public Builder setAuthKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        authKey_ = value;
        onChanged();
        return this;
      }

      private java.util.List<dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService> services_ =
        java.util.Collections.emptyList();
      private void ensureServicesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          services_ = new java.util.ArrayList<dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService>(services_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder> servicesBuilder_;

      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public java.util.List<dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService> getServicesList() {
        if (servicesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(services_);
        } else {
          return servicesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public int getServicesCount() {
        if (servicesBuilder_ == null) {
          return services_.size();
        } else {
          return servicesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService getServices(int index) {
        if (servicesBuilder_ == null) {
          return services_.get(index);
        } else {
          return servicesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder setServices(
          int index, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService value) {
        if (servicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServicesIsMutable();
          services_.set(index, value);
          onChanged();
        } else {
          servicesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder setServices(
          int index, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder builderForValue) {
        if (servicesBuilder_ == null) {
          ensureServicesIsMutable();
          services_.set(index, builderForValue.build());
          onChanged();
        } else {
          servicesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder addServices(dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService value) {
        if (servicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServicesIsMutable();
          services_.add(value);
          onChanged();
        } else {
          servicesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder addServices(
          int index, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService value) {
        if (servicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServicesIsMutable();
          services_.add(index, value);
          onChanged();
        } else {
          servicesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder addServices(
          dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder builderForValue) {
        if (servicesBuilder_ == null) {
          ensureServicesIsMutable();
          services_.add(builderForValue.build());
          onChanged();
        } else {
          servicesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder addServices(
          int index, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder builderForValue) {
        if (servicesBuilder_ == null) {
          ensureServicesIsMutable();
          services_.add(index, builderForValue.build());
          onChanged();
        } else {
          servicesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder addAllServices(
          java.lang.Iterable<? extends dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService> values) {
        if (servicesBuilder_ == null) {
          ensureServicesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, services_);
          onChanged();
        } else {
          servicesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder clearServices() {
        if (servicesBuilder_ == null) {
          services_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          servicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public Builder removeServices(int index) {
        if (servicesBuilder_ == null) {
          ensureServicesIsMutable();
          services_.remove(index);
          onChanged();
        } else {
          servicesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder getServicesBuilder(
          int index) {
        return getServicesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder getServicesOrBuilder(
          int index) {
        if (servicesBuilder_ == null) {
          return services_.get(index);  } else {
          return servicesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public java.util.List<? extends dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder> 
           getServicesOrBuilderList() {
        if (servicesBuilder_ != null) {
          return servicesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(services_);
        }
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder addServicesBuilder() {
        return getServicesFieldBuilder().addBuilder(
            dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.getDefaultInstance());
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder addServicesBuilder(
          int index) {
        return getServicesFieldBuilder().addBuilder(
            index, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.getDefaultInstance());
      }
      /**
       * <pre>
       *A list of the services needed by the client for setup.
       * </pre>
       *
       * <code>repeated .Loadbalancer.ClientService services = 3;</code>
       */
      public java.util.List<dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder> 
           getServicesBuilderList() {
        return getServicesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder> 
          getServicesFieldBuilder() {
        if (servicesBuilder_ == null) {
          servicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientService.Builder, dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientServiceOrBuilder>(
                  services_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          services_ = null;
        }
        return servicesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Loadbalancer.ClientHandshakeReply)
    }

    // @@protoc_insertion_point(class_scope:Loadbalancer.ClientHandshakeReply)
    private static final dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply();
    }

    public static dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClientHandshakeReply>
        PARSER = new com.google.protobuf.AbstractParser<ClientHandshakeReply>() {
      public ClientHandshakeReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ClientHandshakeReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClientHandshakeReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClientHandshakeReply> getParserForType() {
      return PARSER;
    }

    public dev.remine.guilder.rpc.loadbalancer.HandshakeOuterClass.ClientHandshakeReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Loadbalancer_ClientService_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Loadbalancer_ClientService_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Loadbalancer_HandshakeRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Loadbalancer_HandshakeRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Loadbalancer_ClientHandshakeReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Loadbalancer_ClientHandshakeReply_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034loadbalancer/handshake.proto\022\014Loadbala" +
      "ncer\"W\n\rClientService\022\n\n\002Ip\030\001 \001(\t\022\014\n\004Por" +
      "t\030\002 \001(\005\",\n\004Type\022\013\n\007PLAYERS\020\000\022\013\n\007SERVERS\020" +
      "\001\022\n\n\006WORLDS\020\002\"*\n\020HandshakeRequest\022\026\n\016han" +
      "dshakeToken\030\001 \001(\t\"b\n\024ClientHandshakeRepl" +
      "y\022\n\n\002Id\030\001 \001(\t\022\017\n\007authKey\030\002 \001(\t\022-\n\010servic" +
      "es\030\003 \003(\0132\033.Loadbalancer.ClientService2d\n" +
      "\tHandshake\022W\n\017HandshakeClient\022\036.Loadbala" +
      "ncer.HandshakeRequest\032\".Loadbalancer.Cli" +
      "entHandshakeReply\"\000B%\n#dev.remine.guilde",
      "r.rpc.loadbalancerb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Loadbalancer_ClientService_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Loadbalancer_ClientService_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Loadbalancer_ClientService_descriptor,
        new java.lang.String[] { "Ip", "Port", });
    internal_static_Loadbalancer_HandshakeRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Loadbalancer_HandshakeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Loadbalancer_HandshakeRequest_descriptor,
        new java.lang.String[] { "HandshakeToken", });
    internal_static_Loadbalancer_ClientHandshakeReply_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Loadbalancer_ClientHandshakeReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Loadbalancer_ClientHandshakeReply_descriptor,
        new java.lang.String[] { "Id", "AuthKey", "Services", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
