syntax = "proto3";

package Loadbalancer;

option java_package = "dev.remine.guilder.rpc.loadbalancer";

//This service is the handshake, this will be the first request made by a Client (Spigot/Proxy)
//It will provide useful information, for example: it will provide the IP's, ports and tokens of all the services to a Client.
service Handshake
{
  rpc HandshakeClient (HandshakeRequest) returns (ClientHandshakeReply) {}
}

//This message provides the information the client may need to connect to a needed service.
//For example: it will provide a service Type PLAYERS with the IP 127.0.0.1 and the Port 50014,
//so when a Spigot server tries to retrieve information of a player it will be able to make a connection to that
//service.
message ClientService
{
  enum Type
  {
    PLAYERS = 0;
    SERVERS = 1;
    WORLDS = 2;
  }
  string Ip = 1;
  int32 Port = 2;
}

message HandshakeRequest
{
  //The handshakeToken is a temporal one use token generated by the servers microservice.
  //the client (Spigot/Proxy) will use it to retrieve the real token. The real token will be linked with the Client
  //so the api can know its permissions level (which service may use or might not Example: Proxy doesn't need access to
  // the Worlds Microservice, so it won't because the World Microservice will recognize the token and close the connection)
  string handshakeToken = 1;
}

message ClientHandshakeReply
{
  //Client Id, it may be useful for Debug/Development tasks
  string Id = 1;
  //The final AuthKey provided by JWT
  string authKey = 2;
  //A list of the services needed by the client for setup.
  repeated ClientService services = 3;
}